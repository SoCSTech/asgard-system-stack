version: "3.5"
networks:
    asgard-network:
        name: asgard-network
services:
    nginx:
        container_name: asgard-nginx
        image: nginx:latest
        restart: always
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./asgard-frontend/app/dist:/var/www/asgard
            - ./heimdall-frontend/app/dist:/var/www/heimdall
            - ./mimir-frontend/app/dist:/var/www/mimir
            - ./yggdrasil-frontend/app/dist:/var/www/yggdrasil
        ports:
            - 80:80
            - 443:443
        networks:
            - asgard-network

    db-mysql:
        container_name: asgard-db
        image: mysql:latest
        command: --init-file /usr/src/app/init.sql
        volumes:
            - ./mysql/init.sql:/usr/src/app/init.sql
            - ./volumes/db:/var/lib/mysql
        expose:
            - "3306"
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: <PASSWORD>
            MYSQL_DATABASE: <DATABASE_NAME>
            MYSQL_USER: <USER>
            MYSQL_PASSWORD: <PASSWORD>
        networks:
            - asgard-network

    asgard-frontend:
        container_name: asgard-frontend
        image: node:latest
        volumes:
            - ./asgard-frontend/app:/app
        working_dir: /app
        command: "bash -c 'yarn && yarn run build'"
        networks:
            - asgard-network

    heimdall-api:
        container_name: heimdall-api
        build:
            context: ./heimdall-api/api
            dockerfile: Dockerfile
        image: itsgrooben/heimdall-api:latest
        restart: always
        links:
            - db-mysql
        expose:
            - "5000"
        networks:
            - asgard-network

    heimdall-frontend:
        container_name: heimdall-frontend
        image: node:latest
        volumes:
            - ./heimdall-frontend/app:/app
        working_dir: /app
        links:
            - heimdall-api
        command: "bash -c 'yarn && yarn run build'"
        networks:
            - asgard-network

    mimir-api:
        container_name: mimir-api
        build:
            context: ./mimir-api/api
            dockerfile: Dockerfile
        image: itsgrooben/mimir-api:latest
        restart: always
        links:
            - db-mysql
        expose:
            - "5000"
        networks:
            - asgard-network

    mimir-frontend:
        container_name: mimir-frontend
        image: node:latest
        volumes:
            - ./mimir-frontend/app:/app
        working_dir: /app
        links:
            - mimir-api
        command: "bash -c 'yarn && yarn run build'"
        networks:
            - asgard-network

    yggdrasil-api:
        container_name: yggdrasil-api
        build:
            context: ./yggdrasil-api/api
            dockerfile: Dockerfile
        image: itsgrooben/yggdrasil-api:latest
        restart: always
        links:
            - db-mysql
        expose:
            - "5000"
        networks:
            - asgard-network

    yggdrasil-frontend:
        container_name: yggdrasil-frontend
        image: node:latest
        volumes:
            - ./yggdrasil-frontend/app:/app
        working_dir: /app
        links:
            - yggdrasil-api
        command: "bash -c 'yarn && yarn run build'"
        networks:
            - asgard-network

    odin-api:
        container_name: odin-api
        build:
            context: ./odin-api/api
            dockerfile: Dockerfile
        image: itsgrooben/odin-api:latest
        restart: always
        links:
            - db-mysql
        expose:
            - "5000"
        networks:
            - asgard-network
    yggdrasil-2:
        container_name: yggdrasil-2
        image: itsgrooben/yggdrasil-2:0.1.3
        restart: unless-stopped
        ports:
        - 1201:8080

